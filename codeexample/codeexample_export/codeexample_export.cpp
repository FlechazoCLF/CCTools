
/****************************************************************************************************
* File codeexample_export.c Start!
****************************************************************************************************/

/****************************************************************************************************
* Include
****************************************************************************************************/
#include "codeexample_export.h"
/* type */
/* log */
/* sub module */
/* components */

/* ui */
/* cpp */

/****************************************************************************************************
* Define
****************************************************************************************************/

/****************************************************************************************************
* Type
****************************************************************************************************/

/****************************************************************************************************
* Global Variable
****************************************************************************************************/

/* cc_codeexample_export */
cc_codeexample_export_struct cc_codeexample_export_t;
/* init flag */
cc_boolean cc_codeexample_export_initflag = CC_FALSE;

/****************************************************************************************************
* Function Impletement
****************************************************************************************************/

/****************************************************************************************************
* cc_codeexample_export_init()
****************************************************************************************************/
cc_result cc_codeexample_export_init(cc_codeexample_export_struct *cfg_t)
{
    cc_result result = CC_E_OK;

    do
    {
        /* check parameter */
        CHECK_PTR(result,cfg_t);
        CHECK_PTR(result,cfg_t->qtextbrower);
        /* init */
        cc_codeexample_export_t.qtextbrower = cfg_t->qtextbrower;

        /* log */
        CODEEXAMPLE_EXPORT_LOG_PRINT("Init Complete!");
    }while(0u);

    return result;
}

/****************************************************************************************************
* cc_codeexample_export_md()
****************************************************************************************************/
cc_result cc_codeexample_export_md(cc_void)
{
    cc_result result = CC_E_OK;

    do
    {
        ____________________TO_DO____________________
    }while(0u);

    return result;
}

/****************************************************************************************************
* cc_codeexample_export_mainfunction()
****************************************************************************************************/
cc_result cc_codeexample_export_mainfunction(cc_void)
{
    cc_result result = CC_E_OK;

    do
    {

    }while(0u);

    return result;
}

/****************************************************************************************************
* File codeexample_export.c End!
****************************************************************************************************/

