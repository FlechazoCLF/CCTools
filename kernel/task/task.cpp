
/****************************************************************************************************
* File task.c Start!
****************************************************************************************************/

/****************************************************************************************************
* Include
****************************************************************************************************/
/* type */
#include "task.h"
#include "task_cfg.h"
/* log */
/* sub module */
/* components */

/* ui */
/* cpp */

/****************************************************************************************************
* Define
****************************************************************************************************/

/****************************************************************************************************
* Type
****************************************************************************************************/

/****************************************************************************************************
* Global Variable
****************************************************************************************************/

/* task */
task_struct task_t;
/* init flag */
cc_boolean task_initflag = CC_FALSE;

/****************************************************************************************************
* Function Impletement
****************************************************************************************************/

/****************************************************************************************************
* task_init()
****************************************************************************************************/
cc_result task_init(cc_void)
{
    cc_result result = CC_E_OK;

    do
    {
        /* init object */

        /* register object */


        /* init task */


        /* init service */

        /* register service */


        /* start service */

    }while(0u);

    return result;
}

/****************************************************************************************************
* task_mainfunction_1ms()
****************************************************************************************************/
cc_result task_mainfunction_1ms(cc_void)
{
    cc_result result = CC_E_OK;

    do
    {
        task_cfg_mainfunction_1ms();
    }while(0u);

    return result;
}

/****************************************************************************************************
* task_mainfunction_5ms()
****************************************************************************************************/
cc_result task_mainfunction_5ms(cc_void)
{
    cc_result result = CC_E_OK;

    do
    {
        task_cfg_mainfunction_5ms();
    }while(0u);

    return result;
}

/****************************************************************************************************
* task_mainfunction_10ms()
****************************************************************************************************/
cc_result task_mainfunction_10ms(cc_void)
{
    cc_result result = CC_E_OK;

    do
    {
        task_cfg_mainfunction_10ms();
    }while(0u);

    return result;
}

/****************************************************************************************************
* task_mainfunction()
****************************************************************************************************/
cc_result task_mainfunction(cc_void)
{
    cc_result result = CC_E_OK;
    static cc_uint32 time = 0;

    do
    {
        time++;
        /* 1ms */
        task_mainfunction_1ms();
        if ((time % 5) == 0)
        {
            /* 5ms */
            task_mainfunction_5ms();
        }
        if ((time % 10) == 0)
        {
            /* 10ms */
            task_mainfunction_10ms();
        }
    }while(0u);

    return result;
}

/****************************************************************************************************
* File task.c End!
****************************************************************************************************/

